---
name: Run playbook

"on":
  push:
    branches:
      - main
    paths:
      - ansible/**
      - docker/**
  workflow_dispatch:

permissions:
  contents: read

defaults:
  run:
    working-directory: "sebdanielsson.infra/ansible"

jobs:
  run-playbook:
    name: Run playbook - ${{ matrix.server.name }}
    runs-on: ubuntu-24.04-arm
    strategy:
      matrix:
        server:
          - name: hogsmeade
            name_upper: HOGSMEADE

          - name: home-gateway
            name_upper: HOME_GATEWAY

          - name: flightradar
            name_upper: FLIGHTRADAR
    concurrency:
      group: ${{ github.workflow }}-${{ matrix.server.name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          path: "sebdanielsson.infra"

      - name: Setup dotenvx
        run: curl -sfS https://dotenvx.sh/install.sh | sh

      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.14"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Ansible dependencies
        run: |
          ansible-galaxy install -r requirements.yml

      - name: Disable host key checking
        run: |
          mkdir -p ~/.ssh
          echo "Host *" >> ~/.ssh/config
          echo "  StrictHostKeyChecking no" >> ~/.ssh/config

      - name: Load secrets from dotenvx
        id: dotenvx
        uses: andreijiroh-dev/dotenvx-action@v0.5.1
        with:
          path: ${{ github.workspace }}/sebdanielsson.infra/.env.ci
          key: ${{ secrets.DOTENV_PRIVATE_KEY_CI }}
          inject-env-vars: false

      - name: Get latest Tailscale version
        id: get_latest_ts_version
        run: |
          echo "ts_latest=$(curl --silent https://api.github.com/repos/tailscale/tailscale/releases/latest | grep '\"tag_name\":' | sed -E 's/.*\"([^"]+)\".*/\1/' | sed 's/^v\(.*\)/\1/')" >> $GITHUB_OUTPUT

      - name: Setup Tailscale
        uses: tailscale/github-action@v4
        with:
          version: "1.84.0" # or "steps.get_latest_ts_version.outputs.ts_latest" for latest
          oauth-client-id: ${{ steps.dotenvx.outputs.TS_CLIENTID }}
          oauth-secret: ${{ steps.dotenvx.outputs.TS_CLIENTSECRET }}
          tags: tag:ci
          ping: ${{ matrix.server.name }}

      - name: Run playbook ${{ matrix.server.name }}
        run: |
          export DOTENV_PRIVATE_KEY="${{ secrets.DOTENV_PRIVATE_KEY }}"
          export DOTENV_PRIVATE_KEY_${{ matrix.server.name_upper }}="${{ secrets[format('DOTENV_PRIVATE_KEY_{0}', matrix.server.name_upper)] }}"
          dotenvx run -f .env -f .env.${{ matrix.server.name }} -- ansible-playbook -i ./inventory.yml ./${{ matrix.server.name }}.yml
