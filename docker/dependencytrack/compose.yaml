services:
  apiserver:
    image: dependencytrack/apiserver:4.13.5
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - ./.env
    deploy:
      resources:
        limits:
          memory: 12288m
        reservations:
          memory: 8192m
      restart_policy:
        condition: on-failure
    ports:
    - '8086:8080'
    volumes:
    - 'dtrack-data:/data'
    healthcheck:
      test: [ "CMD-SHELL", "wget -t 1 -T 3 --no-proxy -q -O /dev/null http://127.0.0.1:8080$${CONTEXT}health || exit 1" ]
      interval: 30s
      start_period: 60s
      timeout: 3s
    restart: unless-stopped

  frontend:
    image: dependencytrack/frontend:4.13.5
    depends_on:
      apiserver:
        condition: service_healthy
    env_file:
      - ./.env
    # volumes:
    # - "/host/path/to/config.json:/app/static/config.json"
    ports:
      - "8085:8080"
    restart: unless-stopped

  postgres:
    image: postgres:17.6-trixie
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 5s
      timeout: 3s
      retries: 3
    env_file:
      - ./.env
    volumes:
    - "postgres-data:/var/lib/postgresql/data"
    restart: unless-stopped

volumes:
  dtrack-data: {}
  postgres-data: {}
