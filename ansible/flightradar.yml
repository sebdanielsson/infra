---
- name: Flightradar Playbook
  hosts: flightradar
  become: true
  vars:
    ansible_python_interpreter: "/usr/bin/python3"
    docker_env_decryption_key: "{{ lookup('env', 'DOCKER_ENV_DECRYPTION_KEY') }}"

  handlers:
    - name: Import handlers
      ansible.builtin.import_tasks: handlers/main.yml

  roles:
    - name: Install and configure cloudflared
      role: sebdanielsson.cloudflared
      vars:
        cloudflare_tunnel_enable: true
        cloudflare_tunnel_credential: "{{ lookup('env', 'CLOUDFLARE_TUNNEL_FLIGHTRADAR') }}"
      state: present

    - name: Install and configure Tailscale
      role: artis3n.tailscale.machine
      tailscale_args: "--ssh"
      vars:
        tailscale_authkey: "{{ lookup('env', 'TAILSCALE_SERVER_OAUTH') }}"
        tailscale_oauth_preauthorized: true
        tailscale_tags: ["server"]
      state: present

    - name: Install Docker
      role: geerlingguy.docker
      vars:
        docker_edition: ce
        docker_yum_repo_enable_test: 0
        docker_yum_repo_enable_nightly: 0
        docker_packages_state: present
        docker_install_compose_plugin: true
        docker_compose_package: docker-compose-plugin
        docker_compose_package_state: present
        docker_install_compose: false
        docker_users:
          - sebastian
        docker_service_manage: true
        docker_service_state: started
        docker_service_enabled: true
        docker_restart_handler_state: restarted
        docker_daemon_options:
          log-driver: "json-file"
          log-opts:
            max-size: "10m"
            max-file: "3"

  tasks:
    - name: Set hostname
      ansible.builtin.hostname:
        name: flightradar
        use: systemd

    - name: Generate locale
      community.general.locale_gen:
        name: en_US.UTF-8
        state: present

    - name: Ensure net.ipv4.ip_forward is enabled
      ansible.posix.sysctl:
        name: net.ipv4.ip_forward
        value: "1"
        sysctl_set: true
        reload: true
        sysctl_file: /etc/sysctl.d/99-tailscale.conf
        state: present

    - name: Ensure net.ipv6.conf.all.forwarding is enabled
      ansible.posix.sysctl:
        name: net.ipv6.conf.all.forwarding
        value: "1"
        sysctl_set: true
        reload: true
        sysctl_file: /etc/sysctl.d/99-tailscale.conf
        state: present

    - name: User sebastian exists
      ansible.builtin.user:
        name: sebastian
        groups:
          - adm
          - sudo
          - users
        append: true
        shell: /bin/bash
        create_home: true
        home: /home/sebastian
        state: present

    - name: SSH authorized key for 'root'
      ansible.posix.authorized_key:
        user: root
        key: "{{ lookup('env', 'SEBASTIAN_SSH_PUBLIC_KEY') }}"
        state: present

    - name: SSH authorized key for 'sebastian'
      ansible.posix.authorized_key:
        user: sebastian
        key: "{{ lookup('env', 'SEBASTIAN_SSH_PUBLIC_KEY') }}"
        state: present

    - name: Disable root login over SSH
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "^PermitRootLogin"
        line: "PermitRootLogin prohibit-password"
        state: present

    - name: Disable password login
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "^PasswordAuthentication"
        line: "PasswordAuthentication no"
        state: present

    - name: Copy sshd hardening config
      ansible.builtin.copy:
        src: 49-sshd-hardening.conf
        dest: /etc/ssh/sshd_config.d/49-sshd-hardening.conf
        owner: root
        group: root
        mode: "0644"

    - name: Copy ssh hardening config
      ansible.builtin.copy:
        src: 49-ssh-hardening.conf
        dest: /etc/ssh/ssh_config.d/49-ssh-hardening.conf
        owner: root
        group: root
        mode: "0644"

    - name: Install packages
      ansible.builtin.apt:
        name:
          - python3-full
          - tmux
          - apache2-utils
        update_cache: true
        state: present

    - name: Deploy Portainer
      community.docker.docker_container:
        name: portainer
        image: portainer/portainer-ee:2.31.3-alpine
        state: started
        restart_policy: always
        published_ports:
          - "9000:9000"
          - "9443:9443"
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - portainer_data:/data

    - name: Install and configure Flightradar24
      ansible.builtin.import_tasks: tasks/flightradar24.yml

    - name: Synchronize docker files
      ansible.posix.synchronize:
        src: ../docker/
        dest: /docker/
        archive: true
        delete: true
        owner: false
        group: false
        mode: push
        rsync_opts:
          - "--exclude=.DS_Store"

    - name: Docker System Prune
      ansible.builtin.command: docker system prune --all -f
      changed_when: true

    - name: Create docker .env.keys file for decryption
      ansible.builtin.copy:
        content: |
          DOTENV_PRIVATE_KEY="{{ docker_env_decryption_key }}"
        dest: /docker/.env.keys
        mode: "0600"
        owner: root
        group: root

    - name: Run all containers
      ansible.builtin.import_tasks: tasks/flightradar-containers.yml
