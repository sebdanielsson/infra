---
# Jinja2 templates
- name: Add wireguard secrets
  ansible.builtin.template:
    src: ../../docker/transmission-wireguard/wg0.conf.j2
    dest: /docker/transmission-wireguard/wg0.conf
    mode: "0640"
  vars:
    private_key: "{{ lookup('community.general.onepassword', 'wg0', field='private_key', vault='prod', service_account_token=service_account_token) }}"
    public_key: "{{ lookup('community.general.onepassword', 'wg0', field='public_key', vault='prod', service_account_token=service_account_token) }}"
    endpoint: "{{ lookup('community.general.onepassword', 'wg0', field='endpoint', vault='prod', service_account_token=service_account_token) }}"

# Deployments

## transmission-wireguard
- name: Deploy transmission-wireguard
  community.docker.docker_compose_v2:
    project_src: /docker/transmission-wireguard
    pull: always
    state: present
  environment:
    TRANSMISSION_USER: "{{ lookup('community.general.onepassword', 'docker-transmission', field='TRANSMISSION_USER', vault='prod', service_account_token=service_account_token) }}"
    TRANSMISSION_PASS: "{{ lookup('community.general.onepassword', 'docker-transmission', field='TRANSMISSION_PASS', vault='prod', service_account_token=service_account_token) }}"

## media services
- name: Deploy media-stack
  community.docker.docker_compose_v2:
    project_src: /docker/media-stack
    pull: always
    state: present

## Infrastructure services
- name: Deploy Pocket ID
  community.docker.docker_compose_v2:
    project_src: /docker/pocket-id
    pull: always
    state: present
  environment:
    MAXMIND_LICENSE_KEY: "{{ lookup('community.general.onepassword', 'docker-pocket-id', field='MAXMIND_LICENSE_KEY', vault='prod', service_account_token=service_account_token) }}"
    APP_URL: "{{ lookup('community.general.onepassword', 'docker-pocket-id', field='APP_URL', vault='prod', service_account_token=service_account_token) }}"

- name: Deploy Traefik
  community.docker.docker_compose_v2:
    project_src: /docker/traefik
    pull: always
    state: present
  environment:
    CF_DNS_API_TOKEN: "{{ lookup('community.general.onepassword', 'docker-traefik', field='cf_dns_api_token', vault='prod', service_account_token=service_account_token) }}"

- name: Deploy Watchtower
  community.docker.docker_compose_v2:
    project_src: /docker/watchtower
    pull: always
    state: present

- name: Deploy TSDProxy
  community.docker.docker_compose_v2:
    project_src: /docker/tsdproxy
    pull: always
    state: present

- name: Deploy Portainer
  community.docker.docker_compose_v2:
    project_src: /docker/portainer
    pull: always
    state: present

- name: Deploy prometheus-grafana
  community.docker.docker_compose_v2:
    project_src: /docker/prometheus-grafana
    pull: always
    state: absent

## Apps
- name: Deploy Plausible
  community.docker.docker_compose_v2:
    project_src: /docker/plausible
    pull: always
    state: present
  environment:
    POSTGRES_PASSWORD: "{{ lookup('community.general.onepassword', 'docker-plausible', field='plausible_postgres_password', vault='prod', service_account_token=service_account_token) }}"
    BASE_URL: "{{ lookup('community.general.onepassword', 'docker-plausible', field='plausible_base_url', vault='prod', service_account_token=service_account_token) }}"
    SECRET_KEY_BASE: "{{ lookup('community.general.onepassword', 'docker-plausible', field='plausible_secret_key_base', vault='prod', service_account_token=service_account_token) }}"
    TOTP_VAULT_KEY: "{{ lookup('community.general.onepassword', 'docker-plausible', field='plausible_totp_vault_key', vault='prod', service_account_token=service_account_token) }}"
    MAXMIND_LICENSE_KEY: "{{ lookup('community.general.onepassword', 'docker-plausible', field='plausible_maxmind_license_key', vault='prod', service_account_token=service_account_token) }}"
    GOOGLE_CLIENT_ID: "{{ lookup('community.general.onepassword', 'docker-plausible', field='plausible_google_client_id', vault='prod', service_account_token=service_account_token) }}"
    GOOGLE_CLIENT_SECRET: "{{ lookup('community.general.onepassword', 'docker-plausible', field='plausible_google_client_secret', vault='prod', service_account_token=service_account_token) }}"
    MAILGUN_API_KEY: "{{ lookup('community.general.onepassword', 'docker-plausible', field='plausible_mailgun_api_key', vault='prod', service_account_token=service_account_token) }}"
    MAILGUN_DOMAIN: "{{ lookup('community.general.onepassword', 'docker-plausible', field='plausible_mailgun_domain', vault='prod', service_account_token=service_account_token) }}"

- name: Deploy open-webui
  community.docker.docker_compose_v2:
    project_src: /docker/open-webui
    pull: always
    state: present
  environment:
    OLLAMA_BASE_URL: "{{ lookup('community.general.onepassword', 'docker-open-webui', field='OLLAMA_BASE_URL', vault='prod', service_account_token=service_account_token) }}"
    OPENAI_API_BASE_URL: "{{ lookup('community.general.onepassword', 'docker-open-webui', field='OPENAI_API_BASE_URL', vault='prod', service_account_token=service_account_token) }}"
    OPENAI_API_KEY: "{{ lookup('community.general.onepassword', 'docker-open-webui', field='OPENAI_API_KEY', vault='prod', service_account_token=service_account_token) }}"
    OAUTH_CLIENT_ID: "{{ lookup('community.general.onepassword', 'docker-open-webui', field='OAUTH_CLIENT_ID', vault='prod', service_account_token=service_account_token) }}"
    OAUTH_CLIENT_SECRET: "{{ lookup('community.general.onepassword', 'docker-open-webui', field='OAUTH_CLIENT_SECRET', vault='prod', service_account_token=service_account_token) }}"
    OPENID_PROVIDER_URL: "{{ lookup('community.general.onepassword', 'docker-open-webui', field='OPENID_PROVIDER_URL', vault='prod', service_account_token=service_account_token) }}"

## Personal project app backends
- name: Deploy nginx election-map
  community.docker.docker_compose_v2:
    project_src: /docker/nginx
    pull: always
    state: present

- name: Deploy minio election-map
  community.docker.docker_compose_v2:
    project_src: /docker/minio
    pull: always
    state: present
  environment:
    MINIO_ROOT_USER: "{{ lookup('community.general.onepassword', 'docker-minio', field='MINIO_ROOT_USER', vault='prod', service_account_token=service_account_token) }}"
    MINIO_ROOT_PASSWORD: "{{ lookup('community.general.onepassword', 'docker-minio', field='MINIO_ROOT_PASSWORD', vault='prod', service_account_token=service_account_token) }}"

## Game servers
- name: Deploy etlegacy
  community.docker.docker_compose_v2:
    project_src: /docker/etlegacy
    pull: always
    state: absent

- name: Deploy Minecraft
  community.docker.docker_compose_v2:
    project_src: /docker/minecraft
    pull: always
    state: absent
